#!/bin/bash -l

#SBATCH -A sens2018122
#SBATCH -p core
#SBATCH -n 6 
#SBATCH -t 00:00:00
#SBATCH --mail-user=maria.arceo@ki.se
#SBATCH --mail-type=ALL
#SBATCH -J 05.0_rsem 
#SBATCH --output=05.0_rsem_%J.stdout 
#---------------------------------------------------------------------#

dstart=$(date +"%Y/%m/%d %H:%M:%S")
sstart=$(date +%S)
#---------------------------------------------------------------------#

# Load software modules
#module purge # cleaning
module load bioinfo-tools
#module load star/2.5.3a  
module load star/2.7.11a
module load samtools/1.19
module load rsem/1.3.3
#---------------------------------------------------------------------#

# slurm arguments
if [ ! -z "$SLURM_JOB_ID" ] && [ ! "$SLURM_JOB_NAME" = "_interactive" ]
then
	START=${SLURM_ARRAY_TASK_ID}
	NUMLINES=${NUMLINES}
	STOP=$((SLURM_ARRAY_TASK_ID*NUMLINES))
	START="$(($STOP - $(($NUMLINES - 1))))"
	
	echo "JOB_NAME=${SLURM_JOB_NAME}"
	echo "JOB_ID=${SLURM_ARRAY_JOB_ID}"
	echo "TASK_ID=${SLURM_ARRAY_TASK_ID}"
	echo "LINE START=${START}"
	echo "LINE STOP=${STOP}"
fi
#-----------------------------------------------------------------------#
# EXPORTED VARIABLES
args1="${args1}"
#args3="${args3}"
#-----------------------------------------------------------------------#

# Code and logs directories
codedir="${codedir}"
logdir="${logdir}/"
outdir="${outdir}/"
lognm="${lognm}" 
outref="${outdir}/ref/human_GENCODE_GRCh38" # keep updated in *.sh
#-----------------------------------------------------------------------#

# Print arguments passed
var_=$( echo "$(compgen -v | grep -i args -)" )
read -d " " -a  var_array <<< "$var_"
echo "VARIABLES EXPORTED:"
for i in ${var_array[@]}
do
	eval temp='$'$i
	echo "$i: $temp"
done
unset var_ var_array i temp
#-----------------------------------------------------------------------#

# Run
echo "This is job ${SLURM_ARRAY_JOB_ID} task ${SLURM_ARRAY_TASK_ID}, which will do runs ${START} to ${STOP}"

for (( N = ${START}; N <= ${STOP}; N++ ))
do
	LINE=$(sed -n "$N"p ${args1})
	
	if [ ! -z "$LINE" ]
	then
		echo "This is SLURM job ${SLURM_ARRAY_JOB_ID} task ${SLURM_ARRAY_TASK_ID}, run number ${N}"
		echo "File ${LINE}"

		CELL=$( echo ${LINE%/*}  )  # keep updated
		CELL=$( echo "${CELL##*/}" )

		SAMPLE=$(echo ${LINE%/*})  # keep updated
		SAMPLE=$(echo ${SAMPLE%/*})
		SAMPLE=$( echo ${SAMPLE##*/} )

		# Create ouptut directories
		outdir1="${outdir}/${SAMPLE}/${CELL}/"
		mkdir -p ${outdir1}
		
		cell=$( echo "${SAMPLE}-${CELL}" )

		rsem-calculate-expression --num-threads 5 --star --append-names --seed 1234 --single-cell-prior --calc-pme --calc-ci --ci-memory 28000 --sort-bam-by-coordinate --output-genome-bam --phred64-quals --time ${LINE} ${outref} ${outdir1}${cell}
		rm ${outdir1}${cell}.transcript.*
	fi        
done
#&done

<<'_SKIP-1_'
# Checkings -- depend on rsem output. Adjust as necessary
oldd=$PWD

for (( N = ${START}; N <= ${STOP}; N++ ))
do
	LINE=$(sed -n "$N"p ${args1})
	
	if [ ! -z "$LINE" ]
	then
		CELL=$( echo ${LINE%/*}  )  # keep updated
		CELL=$( echo "${CELL##*/}" )

		SAMPLE=$(echo ${LINE%/*})  # keep updated
		SAMPLE=$(echo ${SAMPLE%/*})
		SAMPLE=$( echo ${SAMPLE##*/} )

		cell=$( echo "${SAMPLE}-${CELL}" )
		
		outdir1="${outdir}${SAMPLE}/${CELL}/"
		outf1="${outdir1}${cell}.time"
		
		if [ -d "${outdir1}/${cell}.temp" ]
		then
			rm -rv ${outdir1}/${cell}.temp
		fi
				
		if [ ! -f "${outf1}" ]
		then
			echo "compressing ${SAMPLE}-${CELL}"
			cd ${outdir}${SAMPLE}/
			tar -cvzf NOTPASS-${CELL}.tar.gz ${CELL}/ && rm -r ${CELL}/
			echo "${outdir}${SAMPLE}/${CELL}" >> ${logdir}CELLS-NOTPASS
			echo "${LINE}" >> ${outdir}${lognm}_rerun_CELLS-NOTPASS 
			cd $oldd
		fi
	fi
done
#-----------------------------------------------------------------------#

send=$(date +%S)
dend=$(date +"%Y/%m/%d %H:%M:%S")

runtime=$((send-sstart))

echo "START TIME: ${dstart}"
echo "END TIME: ${dend}"
echo "RUNTIME: ${runtime} seconds"
#-----------------------------------------------------------------------#

# Collect standard output
if [ ! -z "$SLURM_JOB_ID" ] && [ ! "$SLURM_JOB_NAME" = "_interactive" ]
then
	mv ${SLURM_JOB_NAME}_${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.stdout ${logdir}
	echo "LOG FILES ARE IN:"
	echo "${logdir}${SLURM_JOB_NAME}_${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.stdout"
fi
#------------------------------------------------------------------------------------------#
_SKIP-1_

<<'//_SKIP-2_//'
NOTE:
with parameter "--twopassMode Basic", the only option is to load the genome inddex with each iteration in versions 2.5.3a and also 2.7.2b
If we avoided the "--twopassMode" paramteter, we could load the index into shared memory once at the beginning of the loop and then re use it, such that:

for i in "${array with /path/to/trimmed/fastq/files}"
do 
STAR --genomeDir /path/to/genome/index/directory --genomeLoad LoadAndKeep --readFilesIn $i ...
done
STAR --genomeDir /path/to/genome/index/directory --genomeLoad Remove
as counterintuitive as it seems, we dont have to load the genome outside  of the for loop. 
STAR will load it in the first iteration and the re use it -- see htpps://groups.google.com/g/rna-star/c/NsoN8sygX9k/mBOm4uM4ABAAj
//_SKIP-2_//
