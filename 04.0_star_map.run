#!/bin/bash

#SBATCH -A sens2018122
#SBATCH -p core
#SBATCH -n 5 
#SBATCH -t 00:00:00
#SBATCH --mail-user=maria.arceo@ki.se
#SBATCH --mail-type=ALL
#SBATCH -J 04.0_star_map 
#SBATCH --output=04.0_star_map_%J.stdout 
#---------------------------------------------------------------------#

dstart=$(date +"%Y/%m/%d %H:%M:%S")
sstart=$(date +%S)
#---------------------------------------------------------------------#

# Load software modules
#module purge # cleaning
module load bioinfo-tools
module load star/2.5.3a  
#---------------------------------------------------------------------#

# slurm arguments
if [ ! -z "$SLURM_JOB_ID" ] && [ ! "$SLURM_JOB_NAME" = "_interactive" ]
then
	START=${SLURM_ARRAY_TASK_ID}
	NUMLINES=${NUMLINES}
	STOP=$((SLURM_ARRAY_TASK_ID*NUMLINES))
	START="$(($STOP - $(($NUMLINES - 1))))"
	
	echo "JOB_NAME=${SLURM_JOB_NAME}"
	echo "JOB_ID=${SLURM_ARRAY_JOB_ID}"
	echo "TASK_ID=${SLURM_ARRAY_TASK_ID}"
	echo "LINE START=${START}"
	echo "LINE STOP=${STOP}"
fi
#-----------------------------------------------------------------------#
# EXPORTED VARIABLES
args1="${args1}"
args3="${args3}"
#-----------------------------------------------------------------------#

# Code and logs directories
codedir="${codedir}"
logdir="${logdir}/"
outdir="${outdir}/"
lognm="${lognm}" 
#-----------------------------------------------------------------------#

# Print arguments passed
var_=$( echo "$(compgen -v | grep -i args -)" )
read -d " " -a  var_array <<< "$var_"
echo "VARIABLES EXPORTED:"
for i in ${var_array[@]}
do
	eval temp='$'$i
	echo "$i: $temp"
done
unset var_ var_array i temp
#-----------------------------------------------------------------------#

# Run
echo "This is job ${SLURM_ARRAY_JOB_ID} task ${SLURM_ARRAY_TASK_ID}, which will do runs ${START} to ${STOP}"

#genomeDir="${args4}"
#STAR --genomeLoad LoadAndKeep --genomeDir ${genomeDir}

for (( N = ${START}; N <= ${STOP}; N++ ))
do
	LINE=$(sed -n "$N"p ${args1})
	
	if [ ! -z "$LINE" ]
	then
		echo "This is SLURM job ${SLURM_ARRAY_JOB_ID} task ${SLURM_ARRAY_TASK_ID}, run number ${N}"
		echo "File ${LINE}"

		CELL=$( echo ${LINE%/*}  )  # keep updated
		CELL=$( echo "${CELL##*/}" )

		SAMPLE=$(echo ${LINE%/*})  # keep updated
		SAMPLE=$(echo ${SAMPLE%/*})
		SAMPLE=$( echo ${SAMPLE##*/} )

		# Create ouptut directories
		outdir1="${outdir}${SAMPLE}/${CELL}/"
		mkdir -p ${outdir1}

		# Execute
		genomeDir="${args3}"
		
		cell=$( echo "${CELL}_R1_" )

		STAR --runMode alignReads --runThreadN 4 --runRNGseed 1234 --outBAMsortingThreadN 4 \
	         --genomeDir ${genomeDir} \
	         --outReadsUnmapped Fastx --readFilesIn ${LINE} \
	         --outSAMprimaryFlag  OneBestScore \
	         --outFileNamePrefix ${outdir1}${cell} --outSAMtype BAM SortedByCoordinate \
	         --outSAMattributes Standard --twopassMode Basic --quantMode GeneCounts \
	         --outSAMstrandField intronMotif --seedSearchStartLmax 25 \
	         --genomeLoad NoSharedMemory --limitBAMsortRAM 20000000000
	         ##--readFilesCommand zcat 
	         ## --limitBAMsortRAM 1015363130 is all I need for next run
	fi        
done

#STAR --genomeLoad Remove  --genomeDir ${genomeDir}
unset i nm arg_nm arg_nm1 genomeDir

# Checkings
oldd=$PWD

for (( N = ${START}; N <= ${STOP}; N++ ))
do
	LINE=$(sed -n "$N"p ${args1})
	
	if [ ! -z "$LINE" ]
	then
		CELL=$( echo ${LINE%/*}  )  # keep updated
		CELL=$( echo "${CELL##*/}" )

		SAMPLE=$(echo ${LINE%/*})  # keep updated
		SAMPLE=$(echo ${SAMPLE%/*})
		SAMPLE=$( echo ${SAMPLE##*/} )

		outf1="${outdir}${SAMPLE}/${CELL}/"
		
		if [ ! -e ${outf1}${CELL}_R1_Log.final.out ]
		then
			cd ${outdir}${SAMPLE}
			tar -cvzf NOTPASS-${CELL}.tar.gz ${CELL}/ && rm -r ${CELL}/
			echo "${outdir}${SAMPLE}/${CELL}" >> ${logdir}CELLS-NOTPASS
			cd $oldd
		fi
	fi
done
#-----------------------------------------------------------------------#

send=$(date +%S)
dend=$(date +"%Y/%m/%d %H:%M:%S")

runtime=$((send-sstart))

echo "START TIME: ${dstart}"
echo "END TIME: ${dend}"
echo "RUNTIME: ${runtime} seconds"
#-----------------------------------------------------------------------#

# Collect standard output
if [ ! -z "$SLURM_JOB_ID" ] && [ ! "$SLURM_JOB_NAME" = "_interactive" ]
then
	mv ${SLURM_JOB_NAME}_${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.stdout ${logdir}
	echo "LOG FILES ARE IN:"
	echo "${logdir}${SLURM_JOB_NAME}_${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.stdout"
fi
#------------------------------------------------------------------------------------------#

<<'//_SKIP_//'
NOTE:
with parameter "--twopassMode Basic", the only option is to load the genome inddex with each iteration in versions 2.5.3a and also 2.7.2b
If we avoided the "--twopassMode" paramteter, we could load the index into shared memory once at the beginning of the loop and then re use it, such that:

for i in "${array with /path/to/trimmed/fastq/files}"
do 
STAR --genomeDir /path/to/genome/index/directory --genomeLoad LoadAndKeep --readFilesIn $i ...
done
STAR --genomeDir /path/to/genome/index/directory --genomeLoad Remove
as counterintuitive as it seems, we dont have to load the genome outside  of the for loop. 
STAR will load it in the first iteration and the re use it -- see htpps://groups.google.com/g/rna-star/c/NsoN8sygX9k/mBOm4uM4ABAAj
//_SKIP_//
